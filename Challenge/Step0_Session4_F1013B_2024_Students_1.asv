%%%%%%%%%%%%%%%%%%%%%%
%Step0_Session4_F1013B
%%%%%%%%%%%%%%%%%%%%%%

%Continue with the latest version of your code. Do the following.

%TO-DO%
%(1) Using now the concept of electric potential V(i,j) and its relation with the
%E-Field, calculate (using the same three nested for loops preferrably),
%the E field using Matlab's "gradient" function.  

%(2) Using again the command streamslice, create a new canvas to plot the
%aforementioned electric field, using the gradient.

%(3) Add and plot the equipotential lines using the "contour" (use Matlab documentation) command in
%both associated canvases.

%(4) Test the robustness of you code via changing the Nq, Lp and Ln
%values (what happens with the field lines?) - Expect questions of this
%sort in your Oral Exam.

clear;
clc;
clf;

%-----------------?------------------%
Lp=3.5;                      % Longitud placa positiva
Ln=2.5;                      % Longitud placa negativa
t=0.02;                      % Grosor de los electrones
d=0.4;                       % Distancia entre placas
p=0.01;                      % Distancia minima entre las cargas

% Define the characteristics of the electrodes
ke=1/(4*pi*8.85*10^-12);     % Constante del campo electrico
Q=1e-3;                      % Carga electrica en Coulombs
Nq=28;                       % Numero de cargas

%-----------------?------------------%

xmin_original=-d/2-3*t;  xmax_original=-xmin_original;  % 
xmin=-d/2-3*t;  xmax=-xmin;                             % 
ymin=2*(-Lp/2);   ymax=-ymin;                           % 

%-----------------Asegurar que las dimenciones que el area de trabajo sea el adecuado------------------%
if ymin <= -1  
    if xmin >= -0.5 && xmax <= 0.5
            xmin = -1.5;
            xmax = -xmin;
    end
end

%---------------% Se define una malla de puntos en el espacio 2D --------------------%
Ny=30;  Nx=Ny;
x=linspace(xmin, xmax, Nx); y=linspace(ymin, ymax, Ny); % Dibujar puntos en x y y

%-----------------Parches------------------%

vertices2d=[[-d/2-t,Lp/2]    %1 Vertice 1
    [-d/2,Lp/2]              %2 Vertice 2
    [-d/2,-Lp/2]             %3  Vertice 3
    [-d/2-t,-Lp/2]           %4 Vertice 4
    [d/2,Ln/2]               %5 Vertice 5
    [d/2+t,Ln/2]             %6  Vertice 6
    [d/2+t,-Ln/2]            %7  Vertice 7
    [d/2,-Ln/2]];            %8  Vertice 8

%  Las caras del cubo para conectar los vertices
facesP=[1 2 3 4 1];
facesN=[5 6 7 8 5];

% 
colorP=[0.95,0,0];           % Ponerle colores a las caras color rojo
colorN=[0,0,0.7];            % Color azul

%---------------------Start positioning charges------------------%
% Define a linear charge differential
dq=Q/Nq;                     % Charge differential magnitude

% Define the positions of the charges
yp=linspace(-(1-p)*Lp/2,(1-p)*Lp/2,Nq); % Positive charges Y positions, colorcar las cargas sobre las placas
xp(1:Nq)=-d/2-t/2;                      % Positive charges X positions
yn=linspace(-(1-p)*Ln/2,(1-p)*Ln/2,Nq);  % Negative charges Y positions
xn(1:Nq)= d/2+t/2;                                % Negative charges X positions

%Uncomment and complete the following template code to find out if
%you are placing you charges correctly. Additionally, play with some of the
%parameters above, to make sure that the dicrete charges are distributed
%between your plates. Finally, change the lenght of your plates, and see if
%your code responds accordingly.

plot(xp,yp,'*')
hold on
plot(xn,yn,'*') % Same but for negative charges


%-------Electric field calculation for every XY point (No gradient)-------%
% 
% % Initialize potential here
  V(1:Nx,1:Ny)=0;
% 
% % % Initialize electric field components
  Ex = zeros(1:Nx, 1:Ny);  % Where do you want this component to be calculated?
  Ey = zeros(Nx, Ny);
 
% % % Calculate electric field components
% %Three nested for loops start here...
 
  for i = 1:Nx % Loop for x coordinate
      for j = 1:Ny % Loop for y coordinate
          for k = 1:Nq % Loop for every charge

              rx = x(i);
              ry = y(j);
              rxp = xp(k); % Posiciones de x de las cargas positivas
              ryp = yp(k);
              rxn = xn(k);
              ryn = yn(k);

              r3psep = (sqrt((rx-rxp)^2 + (ry-ryp)^2))^3; % Distancia a la carga positiva
              r3nsep = (sqrt((rx - rxn)^2 + (ry - ryn)^2))^3; % Distancia a la carga negativa
              
          end
      end
  end
 

% %Some place here you must calculate the E-field components.
% %Some place you must calculate V(i,j) potential for ith, jth position.

 
% %Three anidated for loops ends here...
% 
% % Calculate the electric field components using the gradient of potential
% % here
% 
% [?, ?] = gradient(V'); %Why do we need V' instead of V? 
% 
% % 
% hold on
% axis ([xmin xmax ymin ymax])
% xlabel 'x position, mm'
% ylabel 'y position, mm'
% title 'Dielectrophoresis (No gradient)'
% grid on
% 
% %Set aesthetics (for E-field plot) using the potential values recently added (just uncomment).
% %pcolor(x,y,V')                % Color map of the Voltage
% %colormap bone                 % Color
% 
% 
% %Use here the streamslice command to plot you calculated E-field...
% streamslice(?,?,?,?,?)  % Electric field lines without gradient 
%                         % Why do we need Ex' and Ey' instead of Ex and Ey?
% 
% %Uncomment and comment (what are these new lines for?)
% %shading interp;
% %colorbar
% 
% % 
% patch('Faces',facesP,'Vertices',vertices2d,'FaceColor',colorP);
% patch('Faces',facesN,'Vertices',vertices2d,'FaceColor',colorN);
% 
% %%%-- Plot here now the E-Field using the gradient --%%%
% %Use previous lines as a template, use same aesthetics. 


